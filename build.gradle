plugins {
    id 'java'
    id 'antlr'
    id 'idea'
}

group = 'is.yarr.qilletni'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    // SLF4J API dependency
    implementation 'org.apache.logging.log4j:log4j-api:2.22.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.22.1'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.22.1'

    implementation 'org.antlr:antlr4-runtime:4.13.1'
    antlr 'org.antlr:antlr4:4.13.1'
    
    implementation project(':qilletni-api')
    implementation project(':qilletni-spotify')
    implementation project(':qilletni-lib-std')
}

tasks.withType(JavaCompile).each {
    it.options.compilerArgs.add('--enable-preview')
}

//sourceSets {
//    main {
//        java {
//            srcDir "${buildDir}/generated-src/antlr/main"
//        }
//    }
//}

generateGrammarSource {
//        val pkg = "com.stackoverflow.antlr"
//        arguments = arguments + listOf("-package", pkg)
        var pkg = 'is.yarr.qilletni.antlr';
        outputDirectory = new File("${project.buildDir}/generated-src/antlr/main/${pkg.split("\\.").join("/")}".toString())
//        outputDirectory = new File("${project.layout.buildDirectory}/generated-src/antlr/" + "is.yarr.qilletni.antlr".split("\\.").join("/")
    maxHeapSize = "128m"
    arguments += ['-visitor', '-no-listener']
}

sourceSets {
    generated {
        java.srcDir 'generated-src/antlr/main/'
    }
}

idea {
    module {
        inheritOutputDirs = true
    }
}


tasks.withType(JavaCompile) {
    options.compilerArgs += "--enable-preview"
}

tasks.withType(Test) {
    jvmArgs += "--enable-preview"
}

tasks.withType(JavaExec) {
    jvmArgs += '--enable-preview'
}

compileJava.dependsOn generateGrammarSource

test {
    useJUnitPlatform()
}