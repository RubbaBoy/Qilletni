plugins {
    id 'java'
    id 'antlr'
}

group = 'is.yarr.qilletni'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

//    implementation 'org.slf4j:slf4j-api:2.0.9'
//    implementation 'org.apache.logging.log4j:log4j-slf4j2-impl:3.0.0-alpha1'
//    
//    implementation 'org.apache.logging.log4j:log4j:2.21.1'

    // SLF4J API dependency
    implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.20.0'

    implementation 'org.antlr:antlr4-runtime:4.13.1'
    antlr 'org.antlr:antlr4:4.13.1'

    implementation ('org.eclipse.jetty:jetty-server:12.0.4') {
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }

    implementation ('se.michaelthelin.spotify:spotify-web-api-java:8.3.4') {
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }
    
    implementation 'org.hibernate:hibernate-core:5.5.7.Final'
    implementation 'org.postgresql:postgresql:42.3.8'
}

//sourceSets {
//    main {
//        java {
//            srcDir "${buildDir}/generated-src/antlr/main"
//        }
//    }
//}

generateGrammarSource {
//        val pkg = "com.stackoverflow.antlr"
//        arguments = arguments + listOf("-package", pkg)
        var pkg = 'is.yarr.qilletni.antlr';
        outputDirectory = new File("${project.buildDir}/generated-src/antlr/main/${pkg.split("\\.").join("/")}".toString())
//        outputDirectory = new File("${project.layout.buildDirectory}/generated-src/antlr/" + "is.yarr.qilletni.antlr".split("\\.").join("/")
    maxHeapSize = "128m"
    arguments += ['-visitor', '-no-listener']
}

sourceSets {
    generated {
        java.srcDir 'generated-src/antlr/main/'
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs += "--enable-preview"
}

tasks.withType(Test) {
    jvmArgs += "--enable-preview"
}

tasks.withType(JavaExec) {
    jvmArgs += '--enable-preview'
}

compileJava.dependsOn generateGrammarSource

test {
    useJUnitPlatform()
}